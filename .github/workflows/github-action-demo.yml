name: Apprendre Github Actions
run-name: ${{ github.actor }} teste Github Actions
on: [push]
jobs:
  check-bats-version:
    runs-on: ubuntu-latest
    steps:
      - run: echo "This job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is running on a runner in ${{ runner.os }} server hosted by Github."
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "This ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "This job's status is ${{ job.status }}."
        name: SonarQube
        on:
          push:
            branches:
              - main
          pull_request:
            types: [ opened, synchronize, reopened ]
        jobs:
          build:
            name: Build and analyze
            runs-on: ubuntu-latest
            steps:
              - uses: actions/checkout@v4
                with:
                  fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
              - name: Set up JDK 21
                uses: actions/setup-java@v4
                with:
                  java-version: 21
                  distribution: 'zulu' # Alternative distribution options are available.
              - name: Cache SonarQube packages
                uses: actions/cache@v4
                with:
                  path: ~/.sonar/cache
                  key: ${{ runner.os }}-sonar
                  restore-keys: ${{ runner.os }}-sonar
              - name: Cache Maven packages
                uses: actions/cache@v4
                with:
                  path: ~/.m2
                  key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                  restore-keys: ${{ runner.os }}-m2
              - name: Build and analyze
                env:
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=YacineRAFES_apiSpringboot
